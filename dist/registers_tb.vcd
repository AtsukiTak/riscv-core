$date
	Thu Jul  4 01:53:58 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module register_tb $end
$var reg 5 ! a1 [4:0] $end
$var reg 5 " a2 [4:0] $end
$var reg 5 # a3 [4:0] $end
$var reg 1 $ clk $end
$var reg 1 % rst_n $end
$var reg 32 & wd3 [31:0] $end
$var reg 1 ' we3 $end
$scope module regs $end
$var wire 5 ( a1 [4:0] $end
$var wire 5 ) a2 [4:0] $end
$var wire 5 * a3 [4:0] $end
$var wire 1 $ clk $end
$var wire 1 % rst_n $end
$var wire 32 + wd3 [31:0] $end
$var wire 1 ' we3 $end
$var wire 32 , rd2 [31:0] $end
$var wire 32 - rd1 [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 . i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 / i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 /
b0 .
b0 -
b0 ,
bx +
bx *
b0 )
b0 (
x'
bx &
x%
x$
bx #
b0 "
b0 !
$end
#1
1%
0$
#2
b100000 .
0%
#3
1%
#4
b1 !
b1 (
b1 /
#5
b10 !
b10 (
b10 /
#6
b11 !
b11 (
b11 /
#7
b100 !
b100 (
b100 /
#8
b101 !
b101 (
b101 /
#9
b110 !
b110 (
b110 /
#10
b111 !
b111 (
b111 /
#11
b1000 !
b1000 (
b1000 /
#12
b1001 !
b1001 (
b1001 /
#13
b1010 !
b1010 (
b1010 /
#14
b1011 !
b1011 (
b1011 /
#15
b1100 !
b1100 (
b1100 /
#16
b1101 !
b1101 (
b1101 /
#17
b1110 !
b1110 (
b1110 /
#18
b1111 !
b1111 (
b1111 /
#19
b10000 !
b10000 (
b10000 /
#20
b10001 !
b10001 (
b10001 /
#21
b10010 !
b10010 (
b10010 /
#22
b10011 !
b10011 (
b10011 /
#23
b10100 !
b10100 (
b10100 /
#24
b10101 !
b10101 (
b10101 /
#25
b10110 !
b10110 (
b10110 /
#26
b10111 !
b10111 (
b10111 /
#27
b11000 !
b11000 (
b11000 /
#28
b11001 !
b11001 (
b11001 /
#29
b11010 !
b11010 (
b11010 /
#30
b11011 !
b11011 (
b11011 /
#31
b11100 !
b11100 (
b11100 /
#32
b11101 !
b11101 (
b11101 /
#33
b11110 !
b11110 (
b11110 /
#34
b11111 !
b11111 (
b11111 /
#35
b101010 &
b101010 +
b1 #
b1 *
1$
1'
b100000 /
#45
b101010 -
b1 !
b1 (
0$
0'
#56
b1111010 &
b1111010 +
b0 #
b0 *
1$
1'
#66
b0 -
b0 !
b0 (
0$
0'
#67
